trigger:
  branches:
    include:
      - master
  paths:
    include:
      - Minor.Miffy.Core/*
      - Minor.Miffy.Microservices/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

parameters:
  projects:
    - testProjects: 
        - Minor.Miffy.Core.Test
      projectPath: Minor.Miffy.Core
    - testProjects:
        - Minor.Miffy.MicroServices.Test
        - Minor.Miffy.MicroServices.Conventions
        - Minor.Miffy.RabbitMQBus.Test
      projectPath: Minor.Miffy.Microservices

steps:
  - ${{ each project in projects }}:
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        projects: '$(project.projctPath)/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
  
    - ${{ each testProject in project.testProjects }}:
      - task: DotNetCoreCLI@2
        displayName: 'dotnet test'
        inputs:
          command: test
          projects: '$(projectAbstractionsTestPath)/*.csproj'
          arguments: '--configuration $(BuildConfiguration)'
  
    - task: DotNetCoreCLI@2
      inputs:
        command: 'pack'
        packagesToPack: '$(project.projctPath)/*.csproj'
        nobuild: true
        versioningScheme: 'off'
  
    - task: DotNetCoreCLI@2
      inputs:
        majorVersion: 1
        minorVersion: 0
        patchVersion: $(Build.BuildId)
        command: 'pack'
        packagesToPack: '$(projectMicroservicesPath)/*.csproj'
        nobuild: true
        versioningScheme: 'off'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: 'd2d10d82-d2e1-4909-9810-5bf6d3a2eba4'
